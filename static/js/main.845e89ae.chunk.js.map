{"version":3,"sources":["assets/images/pokelogo.png","assets/images/pokeball.png","assets/images/pikachu.png","assets/images/pikachu-inverted.png","components/Header/index.tsx","assets/images/ball.svg","components/PokeballLoading/index.tsx","services/api.ts","util/format.ts","util/pokemonTypesObject.ts","assets/images/bug.svg","assets/images/dark.svg","assets/images/dragon.svg","assets/images/electric.svg","assets/images/fairy.svg","assets/images/fighting.svg","assets/images/fire.svg","assets/images/flying.svg","assets/images/ghost.svg","assets/images/grass.svg","assets/images/ground.svg","assets/images/ice.svg","assets/images/steel.svg","assets/images/normal.svg","assets/images/poison.svg","assets/images/psychic.svg","assets/images/rock.svg","assets/images/water.svg","components/PokemonCard/index.tsx","hooks/usePokedex.tsx","pages/Home/index.tsx","pages/PokemonDetails/index.tsx","routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","to","style","textDecoration","color","src","pokelogo","alt","pikachu","pikachuM","pokeball","PokeballLoading","defaultURL","apiPokemonData","a","axios","get","apiPokemonInfo","url","apiPokemonNextData","findEvolveTree","chain","evolveTree","evolves_to","length","forEach","evolve","push","species","apiSpecificPokemonInfo","id","pokemonInfo","data","pokeSpecieInfo","evolution_chain","evolutionTree","formatName","name","charAt","toUpperCase","slice","pokemonTypesObject","pokemonStylesObject","grass","pokemonCard","border","backgroundImage","pokemonImg","fire","water","bug","dark","dragon","electric","fairy","fighting","normal","poison","flying","psychic","rock","steel","ground","ice","ghost","PokemonCard","pokemon","React","useState","currentType","setCurrentType","types","formatedName","typeName","type","useEffect","onClick","result","localStorage","setItem","JSON","stringify","map","index","icon","pokemonIcon","key","sprites","front_default","height","weight","PokedexContext","createContext","PokedexProvider","children","pokemons","setPokemons","pokemonsInfo","setPokemonsInfo","nextPokemonPage","setNextPokemonPage","currentPokemon","setCurrentPokemon","isFetching","setIsFetching","response","results","next","loadPokemons","promises","some","pokeInfo","Promise","all","then","values","moves","array","oldPokemonsInfo","contextValue","Provider","value","usePokedex","useContext","Home","time","window","onscroll","clearTimeout","setTimeout","document","documentElement","scrollHeight","scrollTop","clientHeight","test","oldPokemons","PokemonDetails","useParams","Object","keys","parse","getItem","jpnName","names","find","language","renderPokemon","imageSRC","generation","flavor_text_entries","flavor_text","evolution","evolutionId","split","join","abilities","ability","is_hidden","Routes","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.845e89ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokelogo.9dc16171.png\";","export default __webpack_public_path__ + \"static/media/pokeball.3c176fc1.png\";","export default __webpack_public_path__ + \"static/media/pikachu.fa642456.png\";","export default __webpack_public_path__ + \"static/media/pikachu-inverted.3414d8a7.png\";","import React from 'react';\nimport pokelogo from '../../assets/images/pokelogo.png';\nimport pokeball from '../../assets/images/pokeball.png';\nimport pikachu from '../../assets/images/pikachu.png';\nimport pikachuM from '../../assets/images/pikachu-inverted.png';\nimport './index.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(): JSX.Element {\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\n        <img className=\"logo\" src={pokelogo} alt=\"Pokemon Series Logo\" />\n      </Link>\n      <div className=\"mobile-nav navbar-item\">\n        <img src={pikachu} alt=\"Pikachu\" className=\"pikachu\" />\n        <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\n          <h1>Pokedex</h1>\n        </Link>\n        <img src={pikachuM} alt=\"Pikachu\" className=\"pikachu\" />\n      </div>\n      <img src={pokeball} alt=\"Pokeball\" className=\"pokeball\" />\n    </nav>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/ball.f3f2ac17.svg\";","import React from 'react';\nimport pokeball from '../../assets/images/ball.svg';\nimport './index.css';\n\nexport default function PokeballLoading(): JSX.Element {\n  return (\n    <div className=\"pokeball-container\">\n      <img src={pokeball} alt=\"pokeball\" className=\"pokeball-loading\" />\n    </div>\n  );\n}","import axios from 'axios';\nimport { EvolutionChain, PokemonData, PokemonDetails, PokemonInfoService, PokemonService, Recursive } from '../interfaces/interface';\n\nconst defaultURL = 'https://pokeapi.co/api/v2/pokemon';\n\nexport const apiPokemonData: () => Promise<PokemonService> = async() => axios.get(`${defaultURL}?limit=50&offset=0`);\n\nexport const apiPokemonInfo: (url: string) => Promise<PokemonInfoService> = async(url) => axios.get(url);\n\nexport const apiPokemonNextData: (url: string) => Promise<PokemonService> = async(url) => axios.get(url);\n\nfunction findEvolveTree(chain: EvolutionChain, evolveTree : PokemonData[] = []): Recursive | PokemonData[] {\n  if (!chain.evolves_to.length) {\n    return [...evolveTree, chain.species];\n  }\n\n  if (chain.evolves_to.length > 1) {\n    chain.evolves_to.forEach(evolve => evolveTree.push(evolve.species));\n    // remove duplicated objects from evolvetree\n    return [chain.species, ...evolveTree];\n  }\n  evolveTree.push(chain.species);\n  return findEvolveTree(chain.evolves_to[0], evolveTree);\n}\n\nexport const apiSpecificPokemonInfo: (id: string | number) => Promise<PokemonDetails> = async (id) => {\n  const { data: pokemonInfo} = await axios.get(`${defaultURL}/${id}`);\n  const {data: pokeSpecieInfo} = await axios.get(`${defaultURL}-species/${id}`);\n\n  const evolution_chain = pokeSpecieInfo.evolution_chain.url;\n  const {data : { chain }} = await axios.get(evolution_chain);\n  const evolutionTree = findEvolveTree(chain);\n\n  return {...pokemonInfo, ...pokeSpecieInfo, evolutionTree};\n};\n","import { FormatName, FormatType } from '../interfaces/interface';\n\nexport const formatName: FormatName = (name) => name.charAt(0).toUpperCase() + name.slice(1);\n\nexport const formatTypes: FormatType = (types) => {\n  const pokeTypes = types.map(({type: { name }}) => name.charAt(0).toUpperCase() + name.slice(1));\n  const pokeTypesFormated = pokeTypes.join('/');\n  return pokeTypesFormated;\n};\n","import bug from '../assets/images/bug.svg';\nimport dark from '../assets/images/dark.svg';\nimport dragon from '../assets/images/dragon.svg';\nimport electric from '../assets/images/electric.svg';\nimport fairy from '../assets/images/fairy.svg';\nimport fighting from '../assets/images/fighting.svg';\nimport fire from '../assets/images/fire.svg';\nimport flying from '../assets/images/flying.svg';\nimport ghost from '../assets/images/ghost.svg';\nimport grass from '../assets/images/grass.svg';\nimport ground from '../assets/images/ground.svg';\nimport ice from '../assets/images/ice.svg';\nimport steel from '../assets/images/steel.svg';\nimport normal from '../assets/images/normal.svg';\nimport poison from '../assets/images/poison.svg';\nimport psychic from '../assets/images/psychic.svg';\nimport rock from '../assets/images/rock.svg';\nimport water from '../assets/images/water.svg';\nimport { PokemonStyleObject, PokemonTypesObject } from '../interfaces/interface';\n\nexport const pokemonTypesObject: PokemonTypesObject = {\n  'bug': bug,\n  'dark': dark,\n  'dragon': dragon,\n  'electric': electric,\n  'fairy': fairy,\n  'fighting': fighting,\n  'fire': fire,\n  'flying': flying,\n  'ghost': ghost,\n  'grass': grass,\n  'ground': ground,\n  'ice': ice,\n  'steel': steel,\n  'normal': normal,\n  'poison': poison,\n  'psychic': psychic,\n  'rock': rock,\n  'water': water\n};\n\nexport const pokemonStylesObject: PokemonStyleObject = {\n  grass: {\n    pokemonCard: {\n      border: '3px solid #466a43',\n      backgroundImage: 'linear-gradient(#ffffff, #63bb5b)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #63bb5b)',\n    }\n  },\n  fire: {\n    pokemonCard: {\n      border: '3px solid #ff9c54',\n      backgroundImage: 'linear-gradient(#ffffff, #fbbf91)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #fbbf91)',\n    }\n  },\n  water: {\n    pokemonCard: {\n      border: '3px solid #334d68',\n      backgroundImage: 'linear-gradient(#ffffff, #477fba)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #477fba)',\n    }\n  },\n  bug: {\n    pokemonCard: {\n      border: '3px solid #93c32c',\n      backgroundImage: 'linear-gradient(#ffffff, #456b41)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #456b41)',\n    }\n  },\n  dark: {\n    pokemonCard: {\n      border: '3px solid #5c5c5c',\n      backgroundImage: 'linear-gradient(#ffffff, #5c5c5c)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #5c5c5c)',\n    }\n  },\n  dragon: {\n    pokemonCard: {\n      border: '3px solid #7b6fcf',\n      backgroundImage: 'linear-gradient(#ffffff, #7b6fcf)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #7b6fcf)',\n    }\n  },\n  electric: {\n    pokemonCard: {\n      border: '3px solid #f7d02c',\n      backgroundImage: 'linear-gradient(#ffffff, #f7d02c)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #f7d02c)',\n    }\n  },\n  fairy: {\n    pokemonCard: {\n      border: '3px solid #f4b1f4',\n      backgroundImage: 'linear-gradient(#ffffff, #f4b1f4)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #f4b1f4)',\n    }\n  },\n  fighting: {\n    pokemonCard: {\n      border: '3px solid #d56723',\n      backgroundImage: 'linear-gradient(#ffffff, #d56723)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #d56723)',\n    }\n  },\n  normal: {\n    pokemonCard: {\n      border: '3px solid #a8a8a8',\n      backgroundImage: 'linear-gradient(#ffffff, #a8a8a8)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #a8a8a8)',\n    }\n  },\n  poison: {\n    pokemonCard: {\n      border: '3px solid #a33ea1',\n      backgroundImage: 'linear-gradient(#ffffff, #a33ea1)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #a33ea1)',\n    }\n  },\n  flying: {\n    pokemonCard: {\n      border: '3px solid #3d98b8',\n      backgroundImage: 'linear-gradient(#ffffff, #3d98b8)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #3d98b8)',\n    }\n  },\n  psychic: {\n    pokemonCard: {\n      border: '3px solid #f366b9',\n      backgroundImage: 'linear-gradient(#ffffff, #f366b9)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #f366b9)',\n    }\n  },\n  rock: {\n    pokemonCard: {\n      border: '3px solid #a38c21',\n      backgroundImage: 'linear-gradient(#ffffff, #a38c21)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #a38c21)',\n    }\n  },\n  steel: {\n    pokemonCard: {\n      border: '3px solid #8a8a8a',\n      backgroundImage: 'linear-gradient(#ffffff, #8a8a8a)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #8a8a8a)',\n    }\n  },\n  ground: {\n    pokemonCard: {\n      border: '3px solid #d1c07b',\n      backgroundImage: 'linear-gradient(#ffffff, #d1c07b)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #d1c07b)',\n    }\n  },\n  ice: {\n    pokemonCard: {\n      border: '3px solid #a3d1ff',\n      backgroundImage: 'linear-gradient(#ffffff, #a3d1ff)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #a3d1ff)',\n    }\n  },\n  ghost: {\n    pokemonCard: {\n      border: '3px solid #7b62a3',\n      backgroundImage: 'linear-gradient(#ffffff, #7b62a3)',\n    },\n    pokemonImg: {\n      backgroundImage: 'linear-gradient(#ffffff, #7b62a3)',\n    }\n  },\n};\n\nexport const pokemonIcon: (type: keyof PokemonTypesObject) => string = (type) => {\n  return pokemonTypesObject[type];\n};","export default __webpack_public_path__ + \"static/media/bug.db16cfbb.svg\";","export default __webpack_public_path__ + \"static/media/dark.683e29f3.svg\";","export default __webpack_public_path__ + \"static/media/dragon.90401bbc.svg\";","export default __webpack_public_path__ + \"static/media/electric.50212284.svg\";","export default __webpack_public_path__ + \"static/media/fairy.e1d797d0.svg\";","export default __webpack_public_path__ + \"static/media/fighting.9ab55fcf.svg\";","export default __webpack_public_path__ + \"static/media/fire.de7b708a.svg\";","export default __webpack_public_path__ + \"static/media/flying.1be78c63.svg\";","export default __webpack_public_path__ + \"static/media/ghost.75fe98a3.svg\";","export default __webpack_public_path__ + \"static/media/grass.f2521346.svg\";","export default __webpack_public_path__ + \"static/media/ground.216d75cb.svg\";","export default __webpack_public_path__ + \"static/media/ice.01c10227.svg\";","export default __webpack_public_path__ + \"static/media/steel.36d5f72d.svg\";","export default __webpack_public_path__ + \"static/media/normal.82694483.svg\";","export default __webpack_public_path__ + \"static/media/poison.f8a60a8b.svg\";","export default __webpack_public_path__ + \"static/media/psychic.8421acc8.svg\";","export default __webpack_public_path__ + \"static/media/rock.d1116fe4.svg\";","export default __webpack_public_path__ + \"static/media/water.8597e837.svg\";","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PokemonInfo, PokemonStyleObject, PokemonTypesObject } from '../../interfaces/interface';\nimport { apiSpecificPokemonInfo } from '../../services/api';\nimport { formatName } from '../../util/format';\nimport { pokemonIcon, pokemonStylesObject } from '../../util/pokemonTypesObject';\nimport './index.css';\n\nexport default function PokemonCard({ pokemon }: { pokemon: PokemonInfo }): JSX.Element {\n  const [currentType, setCurrentType] = React.useState<string>('grass' );\n\n  const {species: { name }, types } = pokemon;\n  const formatedName = formatName(name);\n  const typeName = types[0].type.name;\n\n  useEffect(() => {\n    if (typeName !== 'grass') setCurrentType(typeName);\n  } , [currentType]);\n\n  const type = currentType as keyof PokemonStyleObject;\n\n\n  return (\n    <Link to={`/pokemon/${pokemon.id}`} style={{ textDecoration: 'none', color: 'white' }} onClick={\n      async () => {\n        const result = await apiSpecificPokemonInfo(pokemon.id);\n        localStorage.setItem('cUrReNt-pOkEmOn', JSON.stringify(result));\n      }\n    }>\n      <div key={pokemon.id} className=\"pokemon-card\" style={{...pokemonStylesObject[type].pokemonCard}}>\n        <div className=\"pokemon-header\">\n          <h1 className=\"pokemon-name\">{formatedName}</h1>\n          <div>\n            {types.map((type, index) => {\n              const currentType = type.type.name as keyof PokemonTypesObject;\n              const icon = pokemonIcon(currentType);\n              const key = `${pokemon.id}-${index}-${currentType}`;\n              return <img src={icon} alt={`A pokemon type ${currentType} icon`} key={key} className=\"type-icon\" />;})\n            }\n          </div>\n        </div>\n        <div className=\"card-image\">\n          <img src={pokemon.sprites.front_default} alt={pokemon.species.name} className=\"pokemon-img\" style={{...pokemonStylesObject[type].pokemonImg}} />\n        </div>\n        <div className=\"pokemon-text\">\n          <p>Height: {pokemon.height}</p>\n          <p>Weight: {pokemon.weight}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}","import { createContext, useContext, useEffect, useState } from 'react';\nimport { PokedexContextData, PokedexProviderProps, PokemonData, PokemonDetails, PokemonInfo } from '../interfaces/interface';\nimport { apiPokemonData, apiPokemonInfo } from '../services/api';\n\nconst PokedexContext = createContext<PokedexContextData>({} as PokedexContextData);\n\nexport function PokedexProvider({ children }: PokedexProviderProps): JSX.Element {\n  const [pokemons, setPokemons] = useState<PokemonData[]>([]);\n  const [ pokemonsInfo, setPokemonsInfo ] = useState<PokemonInfo[]>([]);\n  const [nextPokemonPage, setNextPokemonPage] = useState<string>('');\n  const [currentPokemon, setCurrentPokemon] = useState<PokemonDetails>({} as PokemonDetails);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function loadPokemons(): Promise<void> {\n      const response = await apiPokemonData();\n      const {results, next} = response.data;\n      setNextPokemonPage(next);\n      setPokemons(results);\n    }\n\n    loadPokemons();\n  }, []);\n\n\n  useEffect(() => {\n    const promises = [];\n    setIsFetching(true);\n      for (const pokemon of pokemons) {\n        const isPokemonInInfo =  pokemonsInfo.some((pokeInfo) => pokeInfo.species.name === pokemon.name);\n        if (!isPokemonInInfo) {\n          promises.push(apiPokemonInfo(pokemon.url));\n        }\n        Promise.all(promises).then((values) => {\n          const resolvedPromises = values.map(({ data }) => {\n            const { height, id, moves, types, sprites, species, weight } = data;\n            return { height, id, moves, types, sprites, species, weight };\n          });\n          return resolvedPromises;\n        }).then((array) => {\n          if (array.length % 50 === 0) {\n            setPokemonsInfo((oldPokemonsInfo) => [...oldPokemonsInfo, ...array]);\n          }\n        });\n      }\n    setIsFetching(false);\n  } , [pokemons]);\n\n  const contextValue: PokedexContextData = {\n    pokemons,\n    setPokemons,\n    nextPokemonPage,\n    setNextPokemonPage,\n    pokemonsInfo,\n    setPokemonsInfo,\n    currentPokemon,\n    setCurrentPokemon,\n    isFetching,\n    setIsFetching,\n  };\n\n  return (\n    <PokedexContext.Provider value={{...contextValue}}>\n      {children}\n    </PokedexContext.Provider>\n  );\n}\n\nexport function usePokedex(): PokedexContextData {\n  const context = useContext(PokedexContext);\n  return context;\n}\n","import React from 'react';\nimport PokeballLoading from '../../components/PokeballLoading';\nimport PokemonCard from '../../components/PokemonCard';\nimport { usePokedex } from '../../hooks/usePokedex';\nimport { apiPokemonNextData } from '../../services/api';\nimport './index.css';\n\nexport default function Home(): JSX.Element {\n  const {pokemonsInfo, setPokemons, nextPokemonPage, setNextPokemonPage, isFetching, setIsFetching } = usePokedex();\n  // eslint-disable-next-line\n  let time: any = null;\n\n  window.onscroll = () => {\n    clearTimeout(time);\n\n    if (!isFetching) {\n      time = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } =\n        document.documentElement;\n        if (scrollHeight - scrollTop - 100 <= clientHeight) {\n          setIsFetching(true);\n          const test = async () => {\n            const {data: {results, next}} = await apiPokemonNextData(nextPokemonPage);\n            setPokemons((oldPokemons) => {\n              return [...oldPokemons, ...results];\n            });\n            setNextPokemonPage(next);\n          };\n          test();\n        }\n      }, 100);\n    }\n  };\n\n  return (\n      <>\n        <div className=\"div-cards\">\n          {pokemonsInfo.map((pokemon) => {\n            return <PokemonCard key={pokemon.id} pokemon={pokemon} />;\n          })}\n        </div>\n        {isFetching && <div><PokeballLoading /></div>}\n      </>\n  );\n}","import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { usePokedex } from '../../hooks/usePokedex';\nimport { PokeId } from '../../interfaces/interface';\nimport { apiSpecificPokemonInfo } from '../../services/api';\nimport { formatName, formatTypes } from '../../util/format';\nimport { pokemonStylesObject } from '../../util/pokemonTypesObject';\nimport './index.css';\n\n\nexport default function PokemonDetails(): JSX.Element {\n  const { id } = useParams<PokeId>();\n  let { currentPokemon } = usePokedex();\n  const { setCurrentPokemon } = usePokedex();\n  if (!Object.keys(currentPokemon).length) {\n    currentPokemon = {...JSON.parse(localStorage.getItem('cUrReNt-pOkEmOn') || '' )};\n  }\n  const jpnName = currentPokemon.names.find((names) => names.language.name === 'ja-Hrkt')?.name;\n  const type = currentPokemon.types[0].type.name as keyof typeof pokemonStylesObject;\n\n  useEffect(() => {\n    const renderPokemon = async () => {\n      const PokemonDetails = await apiSpecificPokemonInfo(id);\n      setCurrentPokemon(PokemonDetails);\n    };\n    renderPokemon();\n  } , [id]);\n\n  const imageSRC: (id: number | string ) => string = (id) => `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\n  return (\n    <div className=\"divdiv\" style={pokemonStylesObject[type].pokemonCard}>\n      <h1>{formatName(currentPokemon.species.name)}</h1>\n      <h3>{jpnName}</h3>\n      <img src={imageSRC(id)} alt=\"A pokemon Image\" className=\"details-image\" />\n      <h5 className=\"details-titles\">{currentPokemon.generation.name}</h5>\n      <div className=\"details-titles\">\n        <h3>Description:</h3>\n        <p>{currentPokemon.flavor_text_entries[0].flavor_text}</p>\n      </div>\n      <div className=\"details-titles\">\n        <h4>Evolutions:</h4>\n        <div>{currentPokemon.evolutionTree.map(\n          (evolution, index) => {\n          const evolutionId = evolution.url.split('/')[6];\n          return (\n            <Link to={`/pokemon/${evolutionId}`}>\n              < img key={`${evolution.name}-${index}`} src={imageSRC(evolutionId)} className=\"evolution-image\" />\n            </Link>\n          );\n          })\n        }</div>\n      </div>\n      <div className=\"details-titles\">\n        <h4>Type:</h4>\n        <p>{formatTypes(currentPokemon.types)}</p>\n      </div>\n      <div className=\"details-titles\">\n        <h4>Abilities:</h4>\n        {currentPokemon.abilities.map(\n          (ability, index) => <p key={`${ability.ability.name}-${index}`}>\n            <span>{ability.is_hidden && 'Hidden: '}</span>\n            {ability.ability.name}\n            </p>)\n        }\n      </div>\n      <div className=\"details-titles\" >\n        <h4>Stats:</h4>\n        <p>Height: {currentPokemon.height}</p>\n        <p>Weight: {currentPokemon.weight}</p>\n      </div>\n    </div>\n  );\n}","import { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport PokemonDetails from './pages/PokemonDetails';\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/pokemon/:id\" component={PokemonDetails} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Header from './components/Header';\nimport Routes from './routes';\nimport './App.css';\n\nconst App = (): JSX.Element => {\n  return (\n    <>\n      <Header />\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { PokedexProvider } from './hooks/usePokedex';\n\nReactDOM.render(\n  <PokedexProvider>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </PokedexProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}